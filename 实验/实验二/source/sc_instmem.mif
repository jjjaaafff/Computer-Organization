DEPTH = 64;           % Memory depth and width are required %
WIDTH = 32;           % Enter a decimal number %
ADDRESS_RADIX = HEX;  % Address and value radixes are optional %
DATA_RADIX = HEX;     % Enter BIN, DEC, HEX, or OCT; unless %
                      % otherwise specified, radixes = HEX %
CONTENT
BEGIN

0 : 20010080;        % (00) main: addi $1, $0, 128 # outport0, inport0              %
1 : 20020084;        % (04)       addi $2, $0, 132 # outport1, inport1              %
2 : 20030088;        % (08)       addi $3, $0, 136 # outport2                       %
3 : 8c240000;        % (0c) loop: lw   $4, 0($1)   # input inport0 to $4            %
4 : 8c450000;        % (10)       lw   $5, 0($2)   # input inport1 to $5            %
5 : 00853020;        % (14)       add  $6, $4, $5  # add inport0 with inport1 to $6 %
6 : 00853801;        % (18)       hamm $7, $4, $5  # hamming inport0 and inport1 to $6 %
7 : ac240000;        % (1c)       sw   $4, 0($1)   # output inport0 to outport0     %
8 : ac450000;        % (20)       sw   $5, 0($2)   # output inport1 to outport1     %
9 : ac660000;        % (24)       sw   $6, 0($3)   # output result to outport2      %
10 : 08000003;        % (28)       j loop           #                                %
END ;